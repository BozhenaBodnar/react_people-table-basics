{"version":3,"sources":["PageNavLink.tsx","components/NavBar/NavBar.tsx","App.tsx","pages/HomePage.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","api.ts","pages/PeoplePage.tsx","pages/NotFoundPage.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","NavBar","role","App","HomePage","Loader","PersonLink","person","name","sex","slug","isFemale","PeopleTable","people","selectedPerson","isSelected","map","born","died","fatherName","motherName","some","woman","find","man","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","isLoading","setIsLoading","hasError","setHasError","useParams","personSlug","havePeople","length","loadPeople","useCallback","loadedPeople","useEffect","NotFoundPage","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.bc975dc4.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { FC } from 'react';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n    to={to}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from '../../PageNavLink';\n\nexport const NavBar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import {\n  Outlet,\n} from 'react-router-dom';\n\nimport './App.scss';\nimport { NavBar } from './components/NavBar';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <NavBar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\nexport type Props = {\n  person: Person;\n};\n\nexport const PersonLink: FC<Props> = ({ person }) => {\n  const { name, sex, slug } = person;\n  const isFemale = sex === 'f';\n\n  return (\n    <Link\n      className={classNames(\n        { 'has-text-danger': isFemale },\n      )}\n      to={`../${slug}`}\n    >\n      {name}\n    </Link>\n  );\n};\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  people: Person[];\n  selectedPerson: string;\n};\n\nexport const PeopleTable: FC<Props> = ({ people, selectedPerson }) => {\n  const isSelected = (person: Person) => person.slug === selectedPerson;\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const {\n            sex,\n            born,\n            died,\n            slug,\n            fatherName,\n            motherName,\n          } = person;\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={slug}\n              className={classNames(\n                { 'has-background-warning': isSelected(person) },\n              )}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n\n              <td>\n                {people.some(woman => woman.name === motherName)\n                  ? (\n                    <PersonLink\n                      person={\n                        people.find(\n                          woman => woman.name === motherName,\n                        ) || person\n                      }\n                    />\n                  )\n                  : motherName || '-'}\n              </td>\n              <td>\n                {people.some(man => man.name === fatherName)\n                  ? (\n                    <PersonLink\n                      person={\n                        people.find(man => man.name === fatherName) || person\n                      }\n                    />\n                  )\n                  : fatherName || '-'}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import {\n  FC,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../components/Loader';\nimport { Person } from '../types';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { getPeople } from '../api';\n\nexport const PeoplePage: FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const { personSlug = '' } = useParams();\n  const havePeople = people.length > 0;\n\n  const loadPeople = useCallback(\n    async () => {\n      setIsLoading(true);\n      try {\n        const loadedPeople = await getPeople();\n\n        setPeople(loadedPeople);\n      } catch {\n        setHasError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    }, [getPeople],\n  );\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n\n          {hasError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!havePeople && !isLoading && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {isLoading ? (\n            <Loader />\n          ) : (\n            <PeopleTable\n              people={people}\n              selectedPerson={personSlug}\n            />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { createRoot } from 'react-dom/client';\nimport {\n  Navigate,\n  Route,\n  HashRouter as Router,\n  Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":personSlug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}